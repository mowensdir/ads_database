{"version":3,"sources":["logo.svg","Home/Home.js","Driver/Driver.js","SideBar/SideBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","Component","Driver","props","console","log","state","response","postData","match","params","driverid","fetch","method","headers","body","JSON","stringify","then","res","json","result","setState","error","this","nextProps","class","id","LastName","FirstName","MiddleName","data-toggle","role","href","data-did","DriverId","DriversLicenseNumber","DateOfBirth","DriverFiles","forEach","file","data-targetid","data-fileid","FileID","FileName","SideBar","searchItems","searchString","document","addEventListener","searchBoxKeyDown","bind","removeEventListener","searchstring","e","keyCode","target","value","searchOnString","section","displayField","idField","length","toUpperCase","map","item","key","type","name","placeholder","onKeyDown","seachBoxKeyDown","resultsContent","React","App","basename","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.75f14b8e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { Component } from 'react';\r\nimport './Home.css';\r\n\r\nclass Home extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<p>Testing</p>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport './Driver.css';\r\n\r\nclass Driver extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tconsole.log('preprops', props);\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tresponse: {}\r\n\t\t}\r\n\t\tconsole.log(this, props);\r\n\t\tlet postData = {\r\n\t\t\tresponse: this.props.match.params.driverid\r\n\t\t};\r\n\t\tfetch(\"/database/ajax/drivers.php\", {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify(postData)\r\n\t\t})\r\n\t\t.then(res => res.json())\r\n\t\t.then(\r\n\t\t\t(result) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tresponse: result\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tconsole.log('error', error);\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tconsole.log('cdm', this);\r\n\t}\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tconsole.log(nextProps);\r\n\t}\r\n\trender() {\r\n\t\tif(!this.state.response.Driver) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div class=\"file-details tab-container\" id=\"file-details\">\r\n\t\t\t\t<h3>{this.state.response.Driver.LastName}, {this.state.response.Driver.FirstName} {this.state.response.Driver.MiddleName}</h3>\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<ul class=\"nav nav-tabs\">\r\n\t\t\t\t\t\t<li class=\"nav-item\"><a data-toggle=\"tab\" role=\"tab\" class=\"nav-link active\" href=\"#info\">Info</a></li>\r\n\t\t\t\t\t\t<li class=\"nav-item\"><a data-toggle=\"tab\" role=\"tab\" class=\"nav-link\" href=\"#files\">Files</a></li>\r\n\t\t\t\t\t\t<li class=\"nav-item\"><a data-toggle=\"tab\" role=\"tab\" class=\"nav-link\" data-did=\"{did}\" href=\"#violations\">Violations</a></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</nav>\r\n\t\t\t\t<div class=\"tab-content tab-pane show active\" role=\"tabpanel\" id=\"info\">\r\n\t\t\t\t\t<p><span class=\"filedetail-label\">Driver ID </span><span class=\"filedetail-value\">{this.state.response.Driver.DriverId}</span></p>\r\n\t\t\t\t\t<p><span class=\"filedetail-label\">DLN </span><span class=\"filedetail-value\">{this.state.response.Driver.DriversLicenseNumber}</span></p>\r\n\t\t\t\t\t<p><span class=\"filedetail-label\">DOB </span><span class=\"filedetail-value\">{this.state.response.Driver.DateOfBirth}</span></p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"file-content tab-content hidden tab-pane\" id=\"files\" role=\"tabpanel\">\r\n\t\t\t\t(if(this.state.response.DriverFiles.length) {\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div class=\"files-sidebar\">\r\n\t\t\t\t\t\t{this.state.response.DriverFiles.forEach((file) => \r\n\t\t\t\t\t\t\t<p><a href=\"#\" class=\"fname-link driver-file\" data-targetid=\"driver-files-content\" data-fileid={file.FileID}>{file.FileName}</a></p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"driver-files-content\" id=\"driver-files-content\"> </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t} else {\r\n\t\t\t\t\t<p class=\"file-nofiles\">No files for this driver</p>\r\n\t\t\t\t});\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"tab-content tab-pane hidden\" id=\"violations\" role=\"tabpanel\">\r\n\t\t\t\tViolations Report\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Driver;\r\n","import React from 'react';\r\nimport './SideBar.css';\r\n\r\nclass SideBar extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsearchItems: {},\r\n\t\t\tsearchString: ''\r\n\t\t}\r\n\t}\r\n\tcomponentWillMount() {\r\n\t\tdocument.addEventListener(\"keydown\", this.searchBoxKeyDown.bind(this));\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener(\"keydown\", this.searchBoxKeyDown.bind(this));\r\n\t}      \r\n\r\n\tsearchOnString() {\r\n\t\tlet postData = {\r\n\t\t\tsearchstring: this.state.searchString\r\n\t\t};\r\n\t\tfetch(\"/database/ajax/search.php\", {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify(postData)\r\n\t\t})\r\n\t\t.then(res => res.json())\r\n\t\t.then(\r\n\t\t\t(result) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tsearchItems: result\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tconsole.log('error', error);\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\tsearchBoxKeyDown(e) {\r\n\t\tif(e.keyCode === 13) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tthis.state.searchString = e.target.value;\r\n\t\t\tthis.searchOnString();\r\n\t\t}\r\n\t}\r\n\r\n\tresultsContent(section, displayField, idField) {\r\n\t\tif(!this.state.searchItems || !this.state.searchItems[section] || !this.state.searchItems[section].length) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn (\r\n\t          <div id=\"results-content\" class=\"results-content\">\r\n\t\t          <p>{section.toUpperCase()}</p>\r\n\t\t          {this.state.searchItems[section].map(item => (\r\n\t\t            <li key={item['idField']}>\r\n\t\t              <a href=\"#\" class=\"driver-link action-link\">{item[displayField]}</a>\r\n\t\t            </li>\r\n\t\t          ))}\r\n\t          </div>\r\n\t\t)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t        <div class=\"sidebar\">\r\n\t          <input type=\"text\" value={this.searchString} name=\"search-text\" class=\"search-text\" placeholder=\"Search\" onKeyDown={this.seachBoxKeyDown} />\r\n\t          {this.resultsContent('Drivers', 'LastName', 'DriverId')}\r\n\t          {this.resultsContent('Services', 'ServiceID', 'ServiceID')}\r\n\t          {this.resultsContent('Files', 'FileName', 'FileID')}\r\n\t        </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SideBar;\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './Home/Home';\nimport Driver from './Driver/Driver';\nimport ReactDOM from 'react-dom';\nimport SideBar from './SideBar/SideBar';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <div class=\"home\">\n        <div class=\"header\">\n          <div class=\"header-left header-block\">\n            ADS Database\n          </div>\n          <div class=\"header-search-container header-block\">\n          </div>\n        </div>\n        <div class=\"body-container\">\n          <SideBar></SideBar>\n          <main>\n              <div class=\"main-content\" id=\"main-content\">\n                <Router basename={'ads_database/ads_database/react/'}>\n                  <Switch>\n                    <Route path={'/dashboard'} component={Home}/>\n                    <Route exact path={'/driver/:driverid'} component={Driver}/>\n                    <Route path={'/driver'} component={Driver}/>\n                  </Switch>\n                </Router>\n              </div>\n          </main>\n        </div>\n\n        <footer>&nbsp;</footer>\n      </div>\n    )\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Home from './Home/Home';\nimport {Switch} from 'react-router';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}