{"version":3,"sources":["logo.svg","Home/Home.js","Driver/Driver.js","SideBar/SideBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","Component","Driver","props","state","response","postData","driverid","match","params","fetch","method","headers","body","JSON","stringify","then","res","json","result","setState","error","console","log","this","class","id","LastName","FirstName","MiddleName","data-toggle","role","href","data-did","DriverId","DriversLicenseNumber","DateOfBirth","DriverFiles","forEach","file","data-targetid","data-fileid","FileID","FileName","SideBar","searchItems","searchString","document","addEventListener","searchBoxKeyDown","bind","removeEventListener","searchstring","e","keyCode","target","value","searchOnString","section","displayField","idField","length","toUpperCase","map","item","key","type","name","placeholder","onKeyDown","seachBoxKeyDown","resultsContent","React","App","basename","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ae99c42.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { Component } from 'react';\r\nimport './Home.css';\r\n\r\nclass Home extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<p>Testing</p>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport './Driver.css';\r\n\r\nclass Driver extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tresponse: {}\r\n\t\t}\r\n\t\tlet postData = {\r\n\t\t\tdriverid: this.props.match.params.driverid\r\n\t\t};\r\n\t\tfetch(\"/database/ajax/drivers.php\", {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify(postData)\r\n\t\t})\r\n\t\t.then(res => res.json())\r\n\t\t.then(\r\n\t\t\t(result) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tresponse: result\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tconsole.log('error', error);\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\trender() {\r\n\t\tif(!this.state.response.Driver) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div class=\"file-details tab-container\" id=\"file-details\">\r\n\t\t\t\t<h3>{this.state.response.Driver.LastName}, {this.state.response.Driver.FirstName} {this.state.response.Driver.MiddleName}</h3>\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<ul class=\"nav nav-tabs\">\r\n\t\t\t\t\t\t<li class=\"nav-item\"><a data-toggle=\"tab\" role=\"tab\" class=\"nav-link active\" href=\"#info\">Info</a></li>\r\n\t\t\t\t\t\t<li class=\"nav-item\"><a data-toggle=\"tab\" role=\"tab\" class=\"nav-link\" href=\"#files\">Files</a></li>\r\n\t\t\t\t\t\t<li class=\"nav-item\"><a data-toggle=\"tab\" role=\"tab\" class=\"nav-link\" data-did=\"{did}\" href=\"#violations\">Violations</a></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</nav>\r\n\t\t\t\t<div class=\"tab-content tab-pane show active\" role=\"tabpanel\" id=\"info\">\r\n\t\t\t\t\t<p><span class=\"filedetail-label\">Driver ID </span><span class=\"filedetail-value\">{this.state.response.Driver.DriverId}</span></p>\r\n\t\t\t\t\t<p><span class=\"filedetail-label\">DLN </span><span class=\"filedetail-value\">{this.state.response.Driver.DriversLicenseNumber}</span></p>\r\n\t\t\t\t\t<p><span class=\"filedetail-label\">DOB </span><span class=\"filedetail-value\">{this.state.response.Driver.DateOfBirth}</span></p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"file-content tab-content hidden tab-pane\" id=\"files\" role=\"tabpanel\">\r\n\t\t\t\t(if(this.state.response.DriverFiles.length) {\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div class=\"files-sidebar\">\r\n\t\t\t\t\t\t{this.state.response.DriverFiles.forEach((file) => \r\n\t\t\t\t\t\t\t<p><a href=\"#\" class=\"fname-link driver-file\" data-targetid=\"driver-files-content\" data-fileid={file.FileID}>{file.FileName}</a></p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"driver-files-content\" id=\"driver-files-content\"> </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t} else {\r\n\t\t\t\t\t<p class=\"file-nofiles\">No files for this driver</p>\r\n\t\t\t\t});\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"tab-content tab-pane hidden\" id=\"violations\" role=\"tabpanel\">\r\n\t\t\t\tViolations Report\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Driver;\r\n","import React from 'react';\r\nimport './SideBar.css';\r\n\r\nclass SideBar extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsearchItems: {},\r\n\t\t\tsearchString: ''\r\n\t\t}\r\n\t}\r\n\tcomponentWillMount() {\r\n\t\tdocument.addEventListener(\"keydown\", this.searchBoxKeyDown.bind(this));\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener(\"keydown\", this.searchBoxKeyDown.bind(this));\r\n\t}      \r\n\r\n\tsearchOnString() {\r\n\t\tlet postData = {\r\n\t\t\tsearchstring: this.state.searchString\r\n\t\t};\r\n\t\tfetch(\"/database/ajax/search.php\", {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify(postData)\r\n\t\t})\r\n\t\t.then(res => res.json())\r\n\t\t.then(\r\n\t\t\t(result) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tsearchItems: result\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tconsole.log('error', error);\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\tsearchBoxKeyDown(e) {\r\n\t\tif(e.keyCode === 13) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tthis.state.searchString = e.target.value;\r\n\t\t\tthis.searchOnString();\r\n\t\t}\r\n\t}\r\n\r\n\tresultsContent(section, displayField, idField) {\r\n\t\tif(!this.state.searchItems || !this.state.searchItems[section] || !this.state.searchItems[section].length) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn (\r\n\t          <div id=\"results-content\" class=\"results-content\">\r\n\t\t          <p>{section.toUpperCase()}</p>\r\n\t\t          {this.state.searchItems[section].map(item => (\r\n\t\t            <li key={item['idField']}>\r\n\t\t            \t{section === 'Drivers' ? (\r\n\t\t              \t\t<a href=\"#\" class=\"driver-link action-link\">{item['LastName']}, {item['FirstName']} {item['MiddleName']}</a>\r\n\t\t            \t) : (\r\n\t\t              \t\t<a href=\"#\" class=\"driver-link action-link\">{item[displayField]}</a>\r\n\t\t            \t)}\r\n\t\t            </li>\r\n\t\t          ))}\r\n\t          </div>\r\n\t\t)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t        <div class=\"sidebar\">\r\n\t          <input type=\"text\" value={this.searchString} name=\"search-text\" class=\"search-text\" placeholder=\"Search\" onKeyDown={this.seachBoxKeyDown} />\r\n\t          {this.resultsContent('Drivers', 'LastName', 'DriverId')}\r\n\t          {this.resultsContent('Services', 'ServiceID', 'ServiceID')}\r\n\t          {this.resultsContent('Files', 'FileName', 'FileID')}\r\n\t        </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SideBar;\r\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Home from './Home/Home';\r\nimport Driver from './Driver/Driver';\r\nimport ReactDOM from 'react-dom';\r\nimport SideBar from './SideBar/SideBar';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div class=\"home\">\r\n        <div class=\"header\">\r\n          <div class=\"header-left header-block\">\r\n            ADS Database\r\n          </div>\r\n          <div class=\"header-search-container header-block\">\r\n          </div>\r\n        </div>\r\n        <div class=\"body-container\">\r\n          <SideBar></SideBar>\r\n          <main>\r\n              <div class=\"main-content\" id=\"main-content\">\r\n                <Router basename={'ads_database/ads_database/react/'}>\r\n                  <Switch>\r\n                    <Route path={'/dashboard'} component={Home}/>\r\n                    <Route exact path={'/driver/:driverid'} component={Driver}/>\r\n                    <Route path={'/driver'} component={Driver}/>\r\n                  </Switch>\r\n                </Router>\r\n              </div>\r\n          </main>\r\n        </div>\r\n\r\n        <footer>&nbsp;</footer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Home from './Home/Home';\r\nimport {Switch} from 'react-router';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}